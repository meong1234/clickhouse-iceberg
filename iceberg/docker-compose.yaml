services:
  iceberg-catalog:
    image: tabulario/iceberg-rest
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=minio-root-user
      - AWS_SECRET_ACCESS_KEY=minio-root-password
      - AWS_REGION=us-east-1
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
      - CATALOG_S3_PATH_STYLE_ACCESS=true
      # Add logging configuration
      - LOG_LEVEL=DEBUG
      - JAVA_TOOL_OPTIONS=-Dlog4j2.configurationFile=/opt/iceberg/conf/log4j2.properties
    healthcheck:
      test: ["CMD", "bash", "-c", "echo > /dev/tcp/localhost/8181"]
      interval: 1s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      iceberg_net:
        
  # Add a service to wait for MinIO to be ready
  minio-wait:
    image: curlimages/curl:latest
    command: sh -c "until curl -s http://minio:9000/minio/health/ready; do echo 'Waiting for MinIO...'; sleep 1; done; echo 'MinIO is ready!'"
    networks:
      iceberg_net:

  init-schema:
    build:
      context: ./python
      dockerfile: ./Dockerfile
    depends_on:
      iceberg-catalog:
        condition: service_healthy
    volumes:
      - ./python:/app
      - ../data/iceberg/schema-logs:/var/log/schema
    command: >
      bash -c "
        echo 'Starting initialization at $(date)' | tee -a /var/log/schema/init.log &&
        echo 'Checking installed packages:' | tee -a /var/log/schema/init.log &&
        pip list | grep -E 'numpy|pandas|pyarrow|pyiceberg' | tee -a /var/log/schema/init.log &&
        echo 'Running schema creation script...' | tee -a /var/log/schema/init.log &&
        python -c 'import sys; print(f\"Python version: {sys.version}\"); import numpy; print(f\"NumPy version: {numpy.__version__}\"); import pandas; print(f\"Pandas version: {pandas.__version__}\"); import pyarrow; print(f\"PyArrow version: {pyarrow.__version__}\"); import pyiceberg; print(f\"PyIceberg version: {pyiceberg.__version__}\")' 2>&1 | tee -a /var/log/schema/init.log &&
        python create_battery_schema.py --catalog http://iceberg-catalog:8181 --warehouse warehouse --namespace iot_battery --table battery_v2 2>&1 | tee -a /var/log/schema/init.log &&
        echo 'Schema creation completed. Container will stay running for debugging.' | tee -a /var/log/schema/init.log &&
        tail -f /dev/null
      "
    networks:
      iceberg_net:
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      # Move AWS environment variables from Dockerfile to here
      - AWS_ACCESS_KEY_ID=minio-root-user
      - AWS_SECRET_ACCESS_KEY=minio-root-password
      - AWS_REGION=us-east-1
      - AWS_S3_ENDPOINT=http://minio:9000
      - AWS_S3_PATH_STYLE_ACCESS=true
      # Add additional S3 configuration to help with MinIO connection
      - AWS_S3_FORCE_PATH_STYLE=true
      - S3_USE_SIGV4=True
      - S3_VERIFY_SSL=False

networks:
  iceberg_net:
    name: iceberg_network
    external: true
